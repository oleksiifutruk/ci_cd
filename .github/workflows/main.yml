#Create AIM with s3 and beanstalk, acces keys
#Create s3 bucket, create beanstalk with python



name : CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "oleksii-test-app"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-north-1"

on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs-on: ubuntu-latest
  
    steps:
      - name: Git clon our repo
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
       
      - name: Configure my AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME}}
        
      - name: Copy deployment to s3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Print Happy Messeage for CI finish
        run: echo "CI Pipeline part finished successfully"
        
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]
    
    steps:
      - name: Configure my AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME}}
      
      - name: Create new ElasticBeanstalk Application
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle s3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}", s3key= "${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{github.sha}}"\
          --description "CommitSHA-${{ github.sha }}"
          
      - name: Deploy new Elastic Beanstalk Application Version
        run: aws elasticbeanstalk update-enviroment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{github.sha}}"
        
      - name: Print Happy Messeage for CD finish
        run: echo "CD Pipeline part finished successfully"
        
        
